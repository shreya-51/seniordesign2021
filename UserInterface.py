# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'controllerboardUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QTimer
import serial
import time
import numpy as np

#voltage
nVolt = np.array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], dtype=float)

#Synchronization Variables
CONNECT =1
TRANSFERDATA=0
RESET = 0;

class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(957, 500)
        self.serPort = None;
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(790, 86, 159, 68))
        self.pushButton.setObjectName("pushButton")
        #adding RESET BUTTONG
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(790, 17, 159, 70))
        self.pushButton_3.setObjectName("pushButton_3")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(90, 90, 701, 61))
        self.textEdit.setObjectName("textEdit")
        self.lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber.setGeometry(QtCore.QRect(88, 280, 91, 31))
        self.lcdNumber.setObjectName("lcdNumber")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(108, 240, 59, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 290, 55, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 330, 75, 26))
        self.label_3.setObjectName("label_3")
        #adding label 14
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(10, 380, 100, 30))
        self.label_14.setObjectName("label_14")
        self.lcdNumber_2 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_2.setGeometry(QtCore.QRect(88, 330, 91, 31))
        self.lcdNumber_2.setObjectName("lcdNumber_2")
        self.lcdNumber_3 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_3.setGeometry(QtCore.QRect(190, 280, 91, 31))
        self.lcdNumber_3.setObjectName("lcdNumber_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(210, 240, 71, 16))
        self.label_4.setObjectName("label_4")
        self.lcdNumber_4 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_4.setGeometry(QtCore.QRect(190, 330, 91, 31))
        self.lcdNumber_4.setObjectName("lcdNumber_4")
        self.lcdNumber_5 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_5.setGeometry(QtCore.QRect(300, 280, 91, 31))
        self.lcdNumber_5.setObjectName("lcdNumber_5")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(320, 240, 71, 16))
        self.label_5.setObjectName("label_5")
        self.lcdNumber_6 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_6.setGeometry(QtCore.QRect(300, 330, 91, 31))
        self.lcdNumber_6.setObjectName("lcdNumber_6")
        self.lcdNumber_7 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_7.setGeometry(QtCore.QRect(410, 330, 91, 31))
        self.lcdNumber_7.setObjectName("lcdNumber_7")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(430, 240, 71, 16))
        self.label_6.setObjectName("label_6")
        self.lcdNumber_8 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_8.setGeometry(QtCore.QRect(410, 280, 91, 31))
        self.lcdNumber_8.setObjectName("lcdNumber_8")
        self.lcdNumber_9 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_9.setGeometry(QtCore.QRect(620, 280, 91, 31))
        self.lcdNumber_9.setObjectName("lcdNumber_9")
        self.lcdNumber_10 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_10.setGeometry(QtCore.QRect(730, 330, 91, 31))
        self.lcdNumber_10.setObjectName("lcdNumber_10")
        self.lcdNumber_11 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_11.setGeometry(QtCore.QRect(840, 330, 91, 31))
        self.lcdNumber_11.setObjectName("lcdNumber_11")
        self.lcdNumber_12 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_12.setGeometry(QtCore.QRect(840, 280, 91, 31))
        self.lcdNumber_12.setObjectName("lcdNumber_12")
        self.lcdNumber_13 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_13.setGeometry(QtCore.QRect(518, 280, 91, 31))
        self.lcdNumber_13.setObjectName("lcdNumber_13")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(640, 240, 71, 16))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(538, 240, 61, 16))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(750, 240, 71, 16))
        self.label_9.setObjectName("label_9")
        self.lcdNumber_14 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_14.setGeometry(QtCore.QRect(730, 280, 91, 31))
        self.lcdNumber_14.setObjectName("lcdNumber_14")
        self.lcdNumber_15 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_15.setGeometry(QtCore.QRect(518, 330, 91, 31))
        self.lcdNumber_15.setObjectName("lcdNumber_15")
        self.lcdNumber_16 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_16.setGeometry(QtCore.QRect(620, 330, 91, 31))
        self.lcdNumber_16.setObjectName("lcdNumber_16")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(860, 240, 71, 16))
        self.label_10.setObjectName("label_10")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(90, 160, 851, 61))
        self.textEdit_2.setObjectName("textEdit_2")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(10, 190, 55, 16))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(10, 120, 71, 16))
        self.label_12.setObjectName("label_12")
        self.textEdit_3 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_3.setGeometry(QtCore.QRect(90, 20, 161, 61))
        self.textEdit_3.setObjectName("textEdit_3")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(10, 40, 71, 16))
        self.label_13.setObjectName("label_13")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(255, 17, 540, 70))
        self.pushButton_2.setObjectName("pushButton_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 957, 26))
        self.menubar.setObjectName("menubar")
        self.menuControl = QtWidgets.QMenu(self.menubar)
        self.menuControl.setObjectName("menuControl")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuControl.menuAction())
        #Adding more buttons
        self.lcdNumber_CUR2 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_CUR2.setGeometry(QtCore.QRect(190, 380, 91, 31))
        self.lcdNumber_CUR2.setObjectName("lcdNumber_CUR2")
        self.lcdNumber_CUR3 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_CUR3.setGeometry(QtCore.QRect(300, 380, 91, 31))
        self.lcdNumber_CUR3.setObjectName("lcdNumber_CUR3")
        self.lcdNumber_CUR8 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_CUR8.setGeometry(QtCore.QRect(840, 380, 91, 31))
        self.lcdNumber_CUR8.setObjectName("lcdNumber_CUR8")
        self.lcdNumber_CUR7 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_CUR7.setGeometry(QtCore.QRect(730, 380, 91, 31))
        self.lcdNumber_CUR7.setObjectName("lcdNumber_CUR7")
        self.lcdNumber_CUR6 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_CUR6.setGeometry(QtCore.QRect(620, 380, 91, 31))
        self.lcdNumber_CUR6.setObjectName("lcdNumber_CUR6")
        self.lcdNumber_CUR5 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_CUR5.setGeometry(QtCore.QRect(518, 380, 91, 31))
        self.lcdNumber_CUR5.setObjectName("lcdNumber_CUR5")
        self.lcdNumber_CUR4 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_CUR4.setGeometry(QtCore.QRect(410, 380, 91, 31))
        self.lcdNumber_CUR4.setObjectName("lcdNumber_CUR4")
        self.lcdNumber_100 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_100.setGeometry(QtCore.QRect(88, 380, 91, 31))
        self.lcdNumber_100.setObjectName("lcdNumber_100")
        #adding labels to show if it is On or OFF
        self.label_Chan1 = QtWidgets.QLabel(self.centralwidget)
        self.label_Chan1.setGeometry(QtCore.QRect(118, 420, 91, 31))
        self.label_Chan1.setObjectName("label_Chan1")
        self.label_Chan2 = QtWidgets.QLabel(self.centralwidget)
        self.label_Chan2.setGeometry(QtCore.QRect(220, 420, 91, 31))
        self.label_Chan2.setObjectName("label_Chan2")
        self.label_Chan3 = QtWidgets.QLabel(self.centralwidget)
        self.label_Chan3.setGeometry(QtCore.QRect(330, 420, 91, 31))
        self.label_Chan3.setObjectName("label_Chan3")
        self.label_Chan4 = QtWidgets.QLabel(self.centralwidget)
        self.label_Chan4.setGeometry(QtCore.QRect(440, 420, 91, 31))
        self.label_Chan4.setObjectName("label_Chan4")
        self.label_Chan5 = QtWidgets.QLabel(self.centralwidget)
        self.label_Chan5.setGeometry(QtCore.QRect(548, 420, 91, 31))
        self.label_Chan5.setObjectName("label_Chan5")
        self.label_Chan6 = QtWidgets.QLabel(self.centralwidget)
        self.label_Chan6.setGeometry(QtCore.QRect(650, 420, 91, 31))
        self.label_Chan6.setObjectName("label_Chan6")
        self.label_Chan7 = QtWidgets.QLabel(self.centralwidget)
        self.label_Chan7.setGeometry(QtCore.QRect(760, 420, 91, 31))
        self.label_Chan7.setObjectName("label_Chan7")
        self.label_Chan8 = QtWidgets.QLabel(self.centralwidget)
        self.label_Chan8.setGeometry(QtCore.QRect(870, 420, 91, 31))
        self.label_Chan8.setObjectName("label_Chan8")
        #adding the last channel
        self.label_Channels = QtWidgets.QLabel(self.centralwidget)
        self.label_Channels.setGeometry(QtCore.QRect(10, 420, 91, 31))
        self.label_Channels.setObjectName("label_Channels")

        #linking the two buttons to send commands
        self.pushButton_2.clicked.connect(self.connectPort)
        self.pushButton.clicked.connect(self.sendSCPI)
        self.pushButton_3.clicked.connect(self.reset)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)






    def connectPort(self):
        #read in text from comport!
        global CONNECT
        CONNECT=1
        mytext = self.textEdit_3.toPlainText()
        print("Conecting to Port!")
        com = 'COM: ' + mytext
        print(com)
        try:
            apple = '/dev/tty.usbmodemM43210051'
            self.serPort = serial.Serial(mytext, 9600)  # Init serial port
            #confirming you are connected!
            if(self.serPort.is_open):
                print("Now Connected to the Board!")
                self.textEdit_2.setText("Now connected to MSP432 via " + com)
                CONNECT=0
        except:
            print("Error Occured in Connecting to Board!")


    #Here Need to update !
    def populateChannels(self):
        global TRANSFERDATA
        global CONNECT
        if CONNECT==1 or TRANSFERDATA==1:
            return;
        mytext = "UP"
        strsend = mytext + "\0"
        self.serPort.write(strsend.encode('utf-8'))
        time.sleep(0.01)
     #   print(self.serPort.inWaiting())
        time.sleep(0.01)  # give it time to catch up
        longStr = ""
        voltStr = ""
        flag =0
        while (self.serPort.inWaiting() > 0):
            time.sleep(0.01)  # Allow for it to catch UP!!
            if(flag <=23):
                serialstr = self.serPort.read(8)
            else:
                serialstr = self.serPort.read(1)
            s = serialstr.decode('utf-8')
            #print(s)
            #print("This is the nVolt Index: ")
            #print(flag)
            #print("***")
            #ADDED THIS!!!
            try:
                f = float(s)
                nVolt[flag] = f
            except:
                #TRANSFERDATA=1;
                print("Error in Receiving Data")

            flag+= 1

    #updating all LCD Displays
        self.lcdNumber.display(nVolt[0]) #correct
        self.lcdNumber_3.display(nVolt[1]) #correct
        self.lcdNumber_5.display(nVolt[2]) #correct
        self.lcdNumber_8.display(nVolt[3]) #7 is current of 4, 6 is current of 3
        self.lcdNumber_13.display(nVolt[4])
        self.lcdNumber_9.display(nVolt[5])
        self.lcdNumber_14.display(nVolt[6]) #
        self.lcdNumber_12.display(nVolt[7])#15 channel 5 current,
    #Update Current LCD Displays
        self.lcdNumber_4.display(nVolt[9]) #correct (Channel 2)
        self.lcdNumber_2.display(nVolt[8])
        self.lcdNumber_6.display(nVolt[10]) #correct
        self.lcdNumber_7.display(nVolt[11]) #correct
        self.lcdNumber_15.display(nVolt[12]) #7 is current of 4, 6 is current of 3
        self.lcdNumber_16.display(nVolt[13])
        self.lcdNumber_10.display(nVolt[14])
        self.lcdNumber_11.display(nVolt[15])
    #Update LiveCurrent LCD Dispalys
        self.lcdNumber_100.display(nVolt[16])
        self.lcdNumber_CUR2.display(nVolt[17])
        self.lcdNumber_CUR3.display(nVolt[18])
        self.lcdNumber_CUR4.display(nVolt[19])
        self.lcdNumber_CUR5.display(nVolt[20])
        self.lcdNumber_CUR6.display(nVolt[21])
        self.lcdNumber_CUR7.display(nVolt[22])
        self.lcdNumber_CUR8.display(nVolt[23])
        #self.textEdit_2.setText(longStr);
        self.updateLabels()
    #ADDING RESET FUNCTIONALITY !!!
    def reset(self):
        global TRANSFERDATA
        global CONNECT
        global RESET;
        RESET = RESET+ 1;
        TRANSFERDATA = 1; #sync process
        while (self.serPort.inWaiting() != 0):
            self.serPort.flushInput()   #Clear Input
            self.serPort.flushOutput()  #Clear Output
        TRANSFERDATA=0;
        if(RESET %2 == 1):
            CONNECT=1;
        else:
            CONNECT=0;
        print("COnnect value")
        print(CONNECT)


    #have it be prepared to update if needed!
    def sendSCPI(self):
        #Now want to Send in the string of chars.
        global TRANSFERDATA
        TRANSFERDATA = 1; #sync process
        self.textEdit_2.setText("") #reset all text
        self.serPort.flushInput()   #Clear Input
        self.serPort.flushOutput()  #Clear Output
        mytext = self.textEdit.toPlainText()
        if(mytext == "UP"):
            print("this one")
            self.populateChannels();
        else:
            strsend = mytext + "\0"
            self.serPort.write(strsend.encode('utf-8'))
            time.sleep(0.1) #used to be 1
      #      print(self.serPort.inWaiting())
            time.sleep(0.01)  # give it time to catch up
            longStr = ""
            voltStr = ""
            s = ""
            flag =0
            first=0;
            while (self.serPort.inWaiting() > 0):   #for debugging purposes !!
                time.sleep(0.01)  # Allow for it to catch UP!!
                if(self.serPort.inWaiting() >= 22): #read the command output.
                    serialstr = self.serPort.read(22)
            #        print(serialstr)
                    s = serialstr.decode('utf-8')
                    self.textEdit_2.append(s)
                else:
                    serialstr = self.serPort.read(1)
          #          print(serialstr)
                    s = serialstr.decode('utf-8')
                    longStr += s
                    flag =1
                    if(s != '!'):
                        voltStr +=s;
            if(flag == 1):
                self.textEdit_2.append(longStr);
          #  print(longStr)
           # self.populateChannels()     #COMMENT THIS OUT WHEN PRESENTING
            TRANSFERDATA=0;

    def updateLabels(self):
        if nVolt[24]>0:
            self.label_Chan1.setText("ON")
        else:
            self.label_Chan1.setText("OFF")
        if nVolt[25]>0:
            self.label_Chan2.setText("ON")
        else:
            self.label_Chan2.setText("OFF")
        if nVolt[26]>0:
            self.label_Chan3.setText("ON")
        else:
            self.label_Chan3.setText("OFF")
        if nVolt[27]>0:
            self.label_Chan4.setText("ON")
        else:
            self.label_Chan4.setText("OFF")
        if nVolt[28]>0:
            self.label_Chan5.setText("ON")
        else:
            self.label_Chan5.setText("OFF")
        if nVolt[29]>0:
            self.label_Chan6.setText("ON")
        else:
            self.label_Chan6.setText("OFF")
        if nVolt[30]>0:
            self.label_Chan7.setText("ON")
        else:
            self.label_Chan7.setText("OFF")
        if nVolt[31]>0:
            self.label_Chan8.setText("ON")
        else:
            self.label_Chan8.setText("OFF")


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Send SCPI Command"))
        self.pushButton_3.setText(_translate("MainWindow","Reset Communication"))
        self.label.setText(_translate("MainWindow", "Channel 1"))
        self.label_2.setText(_translate("MainWindow", "Voltage"))
        self.label_3.setText(_translate("MainWindow", "Current \nProtection"))
        self.label_4.setText(_translate("MainWindow", "Channel 2"))
        self.label_5.setText(_translate("MainWindow", "Channel 3"))
        self.label_6.setText(_translate("MainWindow", "Channel 4"))
        self.label_7.setText(_translate("MainWindow", "Channel 6"))
        self.label_8.setText(_translate("MainWindow", "Channel 5"))
        self.label_9.setText(_translate("MainWindow", "Channel 7"))
        self.label_10.setText(_translate("MainWindow", "Channel 8"))
        self.label_11.setText(_translate("MainWindow", "Terminal"))
        self.label_12.setText(_translate("MainWindow", "Enter SCPI"))
        self.label_13.setText(_translate("MainWindow", "COM PORT"))
        self.label_14.setText(_translate("MainWindow", "Current \nMeasured"))
        self.pushButton_2.setText(_translate("MainWindow", "CONNECT"))
        self.menuControl.setTitle(_translate("MainWindow", "Control"))
        self.label_Chan1.setText(_translate("MainWindow","OFF"))
        self.label_Chan2.setText(_translate("MainWindow","OFF"))
        self.label_Chan3.setText(_translate("MainWindow","OFF"))
        self.label_Chan4.setText(_translate("MainWindow","OFF"))
        self.label_Chan5.setText(_translate("MainWindow","OFF"))
        self.label_Chan6.setText(_translate("MainWindow","OFF"))
        self.label_Chan7.setText(_translate("MainWindow","OFF"))
        self.label_Chan8.setText(_translate("MainWindow","OFF"))
        self.label_Channels.setText(_translate("MainWIndow", "STATUS:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    timer = QTimer()
    timer.timeout.connect(ui.populateChannels)  # execute `update
    timer.setInterval(2000)  # 1000ms = 1s
    timer.start()
    sys.exit(app.exec_())
